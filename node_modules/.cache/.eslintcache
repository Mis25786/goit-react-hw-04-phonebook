[{"C:\\ІТ-НАВЧАННЯ\\GitHub\\goit-react-hw-04-phonebook\\src\\index.js":"1","C:\\ІТ-НАВЧАННЯ\\GitHub\\goit-react-hw-04-phonebook\\src\\components\\App.jsx":"2","C:\\ІТ-НАВЧАННЯ\\GitHub\\goit-react-hw-04-phonebook\\src\\components\\ContactForm\\index.js":"3","C:\\ІТ-НАВЧАННЯ\\GitHub\\goit-react-hw-04-phonebook\\src\\components\\ContactList\\index.js":"4","C:\\ІТ-НАВЧАННЯ\\GitHub\\goit-react-hw-04-phonebook\\src\\components\\Filter\\index.js":"5","C:\\ІТ-НАВЧАННЯ\\GitHub\\goit-react-hw-04-phonebook\\src\\components\\ContactForm\\ContactForm.jsx":"6","C:\\ІТ-НАВЧАННЯ\\GitHub\\goit-react-hw-04-phonebook\\src\\components\\ContactList\\ContactList.jsx":"7","C:\\ІТ-НАВЧАННЯ\\GitHub\\goit-react-hw-04-phonebook\\src\\components\\Filter\\Filter.jsx":"8"},{"size":258,"mtime":1681560335545,"results":"9","hashOfConfig":"10"},{"size":5125,"mtime":1682948016632,"results":"11","hashOfConfig":"10"},{"size":42,"mtime":1681576029047,"results":"12","hashOfConfig":"10"},{"size":42,"mtime":1681576374524,"results":"13","hashOfConfig":"10"},{"size":37,"mtime":1681576300570,"results":"14","hashOfConfig":"10"},{"size":4370,"mtime":1682772157964,"results":"15","hashOfConfig":"10"},{"size":878,"mtime":1681576360217,"results":"16","hashOfConfig":"10"},{"size":819,"mtime":1681576282966,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"ik5vts",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"21"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"C:\\ІТ-НАВЧАННЯ\\GitHub\\goit-react-hw-04-phonebook\\src\\index.js",[],[],[],"C:\\ІТ-НАВЧАННЯ\\GitHub\\goit-react-hw-04-phonebook\\src\\components\\App.jsx",[],[],"C:\\ІТ-НАВЧАННЯ\\GitHub\\goit-react-hw-04-phonebook\\src\\components\\ContactForm\\index.js",[],[],"C:\\ІТ-НАВЧАННЯ\\GitHub\\goit-react-hw-04-phonebook\\src\\components\\ContactList\\index.js",[],[],"C:\\ІТ-НАВЧАННЯ\\GitHub\\goit-react-hw-04-phonebook\\src\\components\\Filter\\index.js",[],[],"C:\\ІТ-НАВЧАННЯ\\GitHub\\goit-react-hw-04-phonebook\\src\\components\\ContactForm\\ContactForm.jsx",["44","45"],[],"import { useState } from 'react';\r\nimport css from './ContactForm.module.css';\r\n\r\nconst ContactForm = ({ createUser }) => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleInputChange = ({ target: { name, value } }) => {\r\n    if (name === 'name') setName(value);\r\n    else if (name === 'number') setNumber(value);\r\n\r\n    // switch (value) {\r\n    //   case 'name':\r\n    //     setName(value);\r\n    //     break;\r\n    //   case 'number':\r\n    //     setNumber(value);\r\n    //     break;\r\n\r\n    //   default:\r\n    //     break;\r\n    // }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    createUser({\r\n      name,\r\n      number,\r\n    });\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={css.form} autoComplete=\"off\" onSubmit={handleSubmit}>\r\n      <label className={css['label-name']}>\r\n        <span className={css['label-text']}>Name</span>\r\n\r\n        <input\r\n          className={css.input}\r\n          value={name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          onChange={handleInputChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={css['label-number']}>\r\n        <span className={css['label-text']}>Number</span>\r\n\r\n        <input\r\n          className={css.input}\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          onChange={handleInputChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button className={css['btn-add']}>Add contact</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n\r\n//=======================================================================\r\n\r\n// import React, { Component } from 'react';\r\n// import css from './ContactForm.module.css';\r\n\r\n// class ContactForm extends Component {\r\n//   state = {\r\n//     contacts: [],\r\n//     name: '',\r\n//     number: '',\r\n//   };\r\n\r\n//   handleInputChange = e => {\r\n//     const { name, value } = e.target;\r\n//     this.setState({ [name]: value });\r\n//   };\r\n\r\n//   handleSubmit = e => {\r\n//     e.preventDefault();\r\n\r\n//     this.props.createUser({\r\n//       name: this.state.name,\r\n//       number: this.state.number,\r\n//     });\r\n//     this.setState({\r\n//       name: '',\r\n//       number: '',\r\n//     });\r\n//   };\r\n\r\n//   render() {\r\n//     const { name, number } = this.state;\r\n\r\n//     return (\r\n//       <form\r\n//         className={css.form}\r\n//         autoComplete=\"off\"\r\n//         onSubmit={this.handleSubmit}\r\n//       >\r\n//         <label className={css['label-name']}>\r\n//           <span className={css['label-text']}>Name</span>\r\n\r\n//           <input\r\n//             className={css.input}\r\n//             value={name}\r\n//             type=\"text\"\r\n//             name=\"name\"\r\n//             onChange={this.handleInputChange}\r\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//             title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n//             required\r\n//           />\r\n//         </label>\r\n//         <label className={css['label-number']}>\r\n//           <span className={css['label-text']}>Number</span>\r\n\r\n//           <input\r\n//             className={css.input}\r\n//             value={number}\r\n//             type=\"tel\"\r\n//             name=\"number\"\r\n//             onChange={this.handleInputChange}\r\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n//             title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n//             required\r\n//           />\r\n//         </label>\r\n//         <button className={css['btn-add']}>Add contact</button>\r\n//       </form>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default ContactForm;\r\n","C:\\ІТ-НАВЧАННЯ\\GitHub\\goit-react-hw-04-phonebook\\src\\components\\ContactList\\ContactList.jsx",[],[],"C:\\ІТ-НАВЧАННЯ\\GitHub\\goit-react-hw-04-phonebook\\src\\components\\Filter\\Filter.jsx",[],[],{"ruleId":"46","severity":1,"message":"47","line":5,"column":10,"nodeType":"48","messageId":"49","endLine":5,"endColumn":18},{"ruleId":"46","severity":1,"message":"50","line":5,"column":20,"nodeType":"48","messageId":"49","endLine":5,"endColumn":31},"no-unused-vars","'contacts' is assigned a value but never used.","Identifier","unusedVar","'setContacts' is assigned a value but never used."]