{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0406\\u0422-\\u041D\\u0410\\u0412\\u0427\\u0410\\u041D\\u041D\\u042F\\\\GitHub\\\\goit-react-hw-04-phonebook\\\\src\\\\components\\\\Filter\\\\Filter.jsx\";\nimport PropTypes from 'prop-types';\nimport css from './Filter.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Filter = _ref => {\n  let {\n    filter,\n    cangeFilter\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.filter,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: css['filter-text'],\n      children: \"Find contacts by name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: css.input,\n      type: \"text\",\n      name: \"name\",\n      value: filter,\n      onChange: cangeFilter,\n      pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n      title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Filter;\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  cangeFilter: PropTypes.func.isRequired\n};\nexport default Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["C:/ІТ-НАВЧАННЯ/GitHub/goit-react-hw-04-phonebook/src/components/Filter/Filter.jsx"],"names":["PropTypes","css","Filter","filter","cangeFilter","input","propTypes","string","isRequired","func"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;;;AAEA,MAAMC,MAAM,GAAG,QAA6B;AAAA,MAA5B;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAA4B;AAC1C,sBACE;AAAK,IAAA,SAAS,EAAEH,GAAG,CAACE,MAApB;AAAA,4BACE;AAAM,MAAA,SAAS,EAAEF,GAAG,CAAC,aAAD,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AACE,MAAA,SAAS,EAAEA,GAAG,CAACI,KADjB;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,KAAK,EAAEF,MAJT;AAKE,MAAA,QAAQ,EAAEC,WALZ;AAME,MAAA,OAAO,EAAC,wHANV;AAOE,MAAA,KAAK,EAAC,wIAPR;AAQE,MAAA,QAAQ;AARV;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAjBD;;KAAMF,M;AAmBNA,MAAM,CAACI,SAAP,GAAmB;AACjBH,EAAAA,MAAM,EAAEH,SAAS,CAACO,MAAV,CAAiBC,UADR;AAEjBJ,EAAAA,WAAW,EAAEJ,SAAS,CAACS,IAAV,CAAeD;AAFX,CAAnB;AAKA,eAAeN,MAAf","sourcesContent":["import PropTypes from 'prop-types';\r\nimport css from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, cangeFilter }) => {\r\n  return (\r\n    <div className={css.filter}>\r\n      <span className={css['filter-text']}>Find contacts by name</span>\r\n\r\n      <input\r\n        className={css.input}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={filter}\r\n        onChange={cangeFilter}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        required\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  cangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n"]},"metadata":{},"sourceType":"module"}