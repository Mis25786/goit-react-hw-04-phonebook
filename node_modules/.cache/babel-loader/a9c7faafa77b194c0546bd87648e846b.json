{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0406\\u0422-\\u041D\\u0410\\u0412\\u0427\\u0410\\u041D\\u041D\\u042F\\\\GitHub\\\\goit-react-hw-04-phonebook\\\\src\\\\components\\\\ContactForm\\\\ContactForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactForm = _ref => {\n  _s();\n\n  let {\n    createUser\n  } = _ref;\n  const [contacts, setContacts] = useState([]);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = _ref2 => {\n    let {\n      target: {\n        name,\n        value\n      }\n    } = _ref2;\n    if (name === 'name') setName(value);else if (name === 'number') setNumber(value); // switch (value) {\n    //   case 'name':\n    //     setName(value);\n    //     break;\n    //   case 'number':\n    //     setNumber(value);\n    //     break;\n    //   default:\n    //     break;\n    // }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    createUser({\n      name,\n      number\n    });\n    setName('');\n    setNumber('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: css.form,\n    autoComplete: \"off\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: css['label-name'],\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: css['label-text'],\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: css.input,\n        value: name,\n        type: \"text\",\n        name: \"name\",\n        onChange: handleInputChange,\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: css['label-number'],\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: css['label-text'],\n        children: \"Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: css.input,\n        value: number,\n        type: \"tel\",\n        name: \"number\",\n        onChange: handleInputChange,\n        pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: css['btn-add'],\n      children: \"Add contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactForm, \"h6nLBnPzDMd28ZG+qKFQYyEXFQw=\");\n\n_c = ContactForm;\nexport default ContactForm; //=======================================================================\n// import React, { Component } from 'react';\n// import css from './ContactForm.module.css';\n// class ContactForm extends Component {\n//   state = {\n//     contacts: [],\n//     name: '',\n//     number: '',\n//   };\n//   handleInputChange = e => {\n//     const { name, value } = e.target;\n//     this.setState({ [name]: value });\n//   };\n//   handleSubmit = e => {\n//     e.preventDefault();\n//     this.props.createUser({\n//       name: this.state.name,\n//       number: this.state.number,\n//     });\n//     this.setState({\n//       name: '',\n//       number: '',\n//     });\n//   };\n//   render() {\n//     const { name, number } = this.state;\n//     return (\n//       <form\n//         className={css.form}\n//         autoComplete=\"off\"\n//         onSubmit={this.handleSubmit}\n//       >\n//         <label className={css['label-name']}>\n//           <span className={css['label-text']}>Name</span>\n//           <input\n//             className={css.input}\n//             value={name}\n//             type=\"text\"\n//             name=\"name\"\n//             onChange={this.handleInputChange}\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//             title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//             required\n//           />\n//         </label>\n//         <label className={css['label-number']}>\n//           <span className={css['label-text']}>Number</span>\n//           <input\n//             className={css.input}\n//             value={number}\n//             type=\"tel\"\n//             name=\"number\"\n//             onChange={this.handleInputChange}\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//             title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//             required\n//           />\n//         </label>\n//         <button className={css['btn-add']}>Add contact</button>\n//       </form>\n//     );\n//   }\n// }\n// export default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["C:/ІТ-НАВЧАННЯ/GitHub/goit-react-hw-04-phonebook/src/components/ContactForm/ContactForm.jsx"],"names":["useState","css","ContactForm","createUser","contacts","setContacts","name","setName","number","setNumber","handleInputChange","target","value","handleSubmit","e","preventDefault","form","input"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport css from './ContactForm.module.css';\r\n\r\nconst ContactForm = ({ createUser }) => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleInputChange = ({ target: { name, value } }) => {\r\n    if (name === 'name') setName(value);\r\n    else if (name === 'number') setNumber(value);\r\n\r\n    // switch (value) {\r\n    //   case 'name':\r\n    //     setName(value);\r\n    //     break;\r\n    //   case 'number':\r\n    //     setNumber(value);\r\n    //     break;\r\n\r\n    //   default:\r\n    //     break;\r\n    // }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    createUser({\r\n      name,\r\n      number,\r\n    });\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={css.form} autoComplete=\"off\" onSubmit={handleSubmit}>\r\n      <label className={css['label-name']}>\r\n        <span className={css['label-text']}>Name</span>\r\n\r\n        <input\r\n          className={css.input}\r\n          value={name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          onChange={handleInputChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={css['label-number']}>\r\n        <span className={css['label-text']}>Number</span>\r\n\r\n        <input\r\n          className={css.input}\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          onChange={handleInputChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button className={css['btn-add']}>Add contact</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n\r\n//=======================================================================\r\n\r\n// import React, { Component } from 'react';\r\n// import css from './ContactForm.module.css';\r\n\r\n// class ContactForm extends Component {\r\n//   state = {\r\n//     contacts: [],\r\n//     name: '',\r\n//     number: '',\r\n//   };\r\n\r\n//   handleInputChange = e => {\r\n//     const { name, value } = e.target;\r\n//     this.setState({ [name]: value });\r\n//   };\r\n\r\n//   handleSubmit = e => {\r\n//     e.preventDefault();\r\n\r\n//     this.props.createUser({\r\n//       name: this.state.name,\r\n//       number: this.state.number,\r\n//     });\r\n//     this.setState({\r\n//       name: '',\r\n//       number: '',\r\n//     });\r\n//   };\r\n\r\n//   render() {\r\n//     const { name, number } = this.state;\r\n\r\n//     return (\r\n//       <form\r\n//         className={css.form}\r\n//         autoComplete=\"off\"\r\n//         onSubmit={this.handleSubmit}\r\n//       >\r\n//         <label className={css['label-name']}>\r\n//           <span className={css['label-text']}>Name</span>\r\n\r\n//           <input\r\n//             className={css.input}\r\n//             value={name}\r\n//             type=\"text\"\r\n//             name=\"name\"\r\n//             onChange={this.handleInputChange}\r\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//             title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n//             required\r\n//           />\r\n//         </label>\r\n//         <label className={css['label-number']}>\r\n//           <span className={css['label-text']}>Number</span>\r\n\r\n//           <input\r\n//             className={css.input}\r\n//             value={number}\r\n//             type=\"tel\"\r\n//             name=\"number\"\r\n//             onChange={this.handleInputChange}\r\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n//             title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n//             required\r\n//           />\r\n//         </label>\r\n//         <button className={css['btn-add']}>Add contact</button>\r\n//       </form>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default ContactForm;\r\n"]},"metadata":{},"sourceType":"module"}